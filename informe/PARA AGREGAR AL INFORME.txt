Experimentos:

Con el objetivo de verificar si la utilización de múltiples threads mejora el rendimiento de nuestro proceeso, se decidió medir el tiempo de ejecución de la funcion count_words concurrente dejando fijo el número de archivos a cargar en 5 y variando el número de threads.
Se realizaron 500 mediciones por thread y se calculó el promedio entre estas:

IMAGEN EXPERIMENTO

Como puede observarse, el tiempo de procesamiento se reduce drásticamente hasta que la cantidad de threads iguala a la cantidad de archivos siendo procesados, siendo 5 y 6 threads la cantidad que arroja valores mínimos de tiempo.
La diferencia de tiempo entre estos dos casos puede ser explicada por la ejecución de otros procesos ajenos al experimento (pertenecientes al sistema operativo), los cuales pueden hacer variar las mediciones.

También puede apreciarse que luego de llegar a este mínimo, el tiempo de ejecución aumenta lentamente a medida que se utilizan más threads.
Esto se puede ser causado por múltiples motivos:
Hay un overhead causado por switchear entre threads, al aumentar su número habrá más cambios, lo que puede reducir la eficiencia del proceso.
A medida que aumentan los threads, aumentan las llamadas al sistema (syscalls) para su sincronización (mutexes), estas son operaciones costosas, por lo que muchas llamadas pueden enlentecer el proceso.
